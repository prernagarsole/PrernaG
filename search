<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GitHub Organization Search</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 20px;
        }
        #results {
            margin-top: 20px;
        }
        .result-item {
            margin: 10px 0;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>

<h1>Search GitHub Organizations for Repositories</h1>
<form id="searchForm">
    <label for="searchQuery">Search Query:</label>
    <input type="text" id="searchQuery" required>
    <button type="submit">Search</button>
</form>

<div id="results"></div>

<script>
    const token = 'YOUR_GITHUB_PERSONAL_ACCESS_TOKEN'; // Replace with your GitHub token
    const organizations = ['ORG_1', 'ORG_2', 'ORG_3', 'ORG_4', 'ORG_5']; // Add your organizations here

    document.getElementById('searchForm').addEventListener('submit', function(event) {
        event.preventDefault();
        
        const searchQuery = document.getElementById('searchQuery').value.trim();
        
        // Clear previous results
        document.getElementById('results').innerHTML = 'Searching...';
        if (searchQuery) {
            searchGitHub(searchQuery);
        } else {
            document.getElementById('results').innerHTML = 'Please enter a valid search query.';
        }
    });

    async function searchGitHub(query) {
        const resultsContainer = document.getElementById('results');
        resultsContainer.innerHTML = '';

        for (const org of organizations) {
            const endpoint = `https://api.github.com/search/repositories?q=${encodeURIComponent(query)}+org:${org}`;
            const response = await fetch(endpoint, {
                headers: {
                    'Authorization': `token ${token}`,
                    'User-Agent': 'JavaScript Client',
                    'Accept': 'application/vnd.github.v3+json'
                }
            });

            if (response.ok) {
                const data = await response.json();
                displayResults(data.items, org);
            } else {
                const errorData = await response.json();
                resultsContainer.innerHTML += `<div class="error">Error fetching from ${org}: ${response.status} - ${errorData.message}</div>`;
            }
        }
    }

    function displayResults(items, organization) {
        const resultsContainer = document.getElementById('results');
        if (items && items.length > 0) {
            items.forEach(item => {
                const resultDiv = document.createElement('div');
                resultDiv.classList.add('result-item');
                resultDiv.innerHTML = `<strong>Repository:</strong> <a href="${item.html_url}" target="_blank">${item.name}</a> (Organization: ${organization}) <br> URL: ${item.html_url}`;
                resultsContainer.appendChild(resultDiv);
            });
        } else {
            resultsContainer.innerHTML += `<div>No repositories found in ${organization} for "${searchQuery}".</div>`;
        }
    }
</script>

</body>
</html>
