name: Renew Repository Secret

on:
  schedule:
    - cron: '*/5 * * * *'  # This cron schedule runs every 5 minutes

  workflow_dispatch:

jobs:
  renew-secret:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install required packages
        run: |
          python -m pip install --upgrade pip
          pip install requests cryptography

      - name: Renew Repository Secret
        run: |
          python - <<EOF
          import base64
          import requests
          from cryptography.hazmat.primitives.asymmetric import rsa
          from cryptography.hazmat.primitives import serialization
          from cryptography.hazmat.primitives.asymmetric import padding
          from cryptography.hazmat.primitives import hashes

          # Hardcoded values
          GITHUB_TOKEN = 'your_github_token'
          SECRET_NAME = 'your_secret_name'
          SECRET_VALUE = 'new_secret_value'
          REPO_NAME = 'owner/repo'  # Update with your repository

          def update_secret(secret_name, secret_value):
              headers = {"Authorization": f"Bearer {GITHUB_TOKEN}"}
              url = f"https://api.github.com/repos/{REPO_NAME}/actions/secrets/public-key"
              response = requests.get(url, headers=headers)
              response.raise_for_status()
              public_key_data = response.json()
              public_key = public_key_data["key"]
              key_id = public_key_data["key_id"]

              public_key_bytes = base64.b64decode(public_key)
              public_key = rsa.RSAPublicKey.load_pem_public_key(public_key_bytes)
              encrypted_value = public_key.encrypt(
                  secret_value.encode(),
                  padding.OAEP(
                      mgf=padding.MGF1(algorithm=hashes.SHA256()),
                      algorithm=hashes.SHA256(),
                      label=None
                  )
              )

              encrypted_value_base64 = base64.b64encode(encrypted_value).decode()

              url = f"https://api.github.com/repos/{REPO_NAME}/actions/secrets/{secret_name}"
              data = {
                  "encrypted_value": encrypted_value_base64,
                  "key_id": key_id
              }
              response = requests.put(url, headers=headers, json=data)
              response.raise_for_status()

              print(f"Secret {secret_name} renewed successfully.")

          # Update the secret
          update_secret(SECRET_NAME, SECRET_VALUE)
          EOF
