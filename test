function Get-MemberIDFromName {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $True, Position = 0)]
        [Alias('D')]
        [System.Collections.Generic.List[String]] $DisplayNames,

        [Parameter(Mandatory = $False)]
        [Alias('R')]
        [String] $SearchRoot = "ou=Useraccounts,dc=nann,dc=non",

        [Parameter(Mandatory = $False)]
        [Alias('S')]
        [ValidateSet("Base", "OneLevel", "Subtree")]
        [String] $SearchScope = "Subtree"
    )

    $Results = @()
    $Searcher = New-Object System.DirectoryServices.DirectorySearcher
    $Searcher.SearchRoot = ([ADSI] "LDAP://$SearchRoot")
    $Searcher.SearchScope = $SearchScope
    $Searcher.PageSize = 5000

    foreach ($DisplayName in $DisplayNames) {
        Write-Output "Searching for display name: $DisplayName"
        $Searcher.Filter = "(&(objectClass=user)(displayName=$DisplayName))"
        $User = $Searcher.FindOne()
        if ($Null -ne $User) {
            Write-Output "Found user: $($User.Properties["employeeid"][0])"
            $Results.Add($User.Properties["employeeid"][0])
        } else {
            Write-Output "User not found: $DisplayName"
        }
    }

    return $Results
}

$thing = Import-Csv -Path "C:\Users\D3022\Downloads\org\DisplayNames.csv"
foreach ($item in $thing) {
    $DisplayNames = @($item.displayname)
    $result = Get-MemberIDFromName -DisplayNames $DisplayNames
    Write-Output "Results for $($item.displayname): $result"
}
