<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GitHub Codebase Search</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        #results {
            margin-top: 20px;
        }
    </style>
</head>
<body>

<h1>GitHub Codebase Search</h1>

<form id="searchForm">
    <label for="token">GitHub Personal Access Token:</label><br>
    <input type="text" id="token" required><br><br>

    <label for="username">GitHub Username:</label><br>
    <input type="text" id="username" required><br><br>

    <button type="submit">Search Codebase</button>
</form>

<div id="results">
    <h2>Search Results</h2>
    <table>
        <thead>
            <tr>
                <th>Organization</th>
                <th>Repository</th>
                <th>File Name</th>
                <th>File Path</th>
                <th>HTML URL</th>
            </tr>
        </thead>
        <tbody id="resultsBody">
            <!-- Results will be inserted here -->
        </tbody>
    </table>
</div>

<script>
    document.getElementById('searchForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent form submission

        const token = document.getElementById('token').value;
        const username = document.getElementById('username').value;
        const resultsBody = document.getElementById('resultsBody');
        resultsBody.innerHTML = ''; // Clear previous results

        // Step 1: Get User Organizations
        fetch(`https://api.github.com/users/${username}/orgs`, {
            headers: {
                'Authorization': `token ${token}`,
                'Accept': 'application/vnd.github.v3+json'
            }
        })
        .then(response => response.json())
        .then(organizations => {
            if (Array.isArray(organizations)) {
                // Step 2: Loop through organizations and search codebase
                organizations.forEach(org => {
                    const orgLogin = org.login;

                    // Codebase Search
                    searchCodebase(orgLogin, token);
                });
            }
        })
        .catch(error => {
            console.error('Error fetching organizations:', error);
        });
    });

    // Function to search codebase in the organization
    function searchCodebase(orgLogin, token) {
        const searchQuery = '*'; // Wildcard for searching all codebase
        let page = 1;

        function fetchCodebaseResults() {
            fetch(`https://api.github.com/search/code?q=${searchQuery}+org:${orgLogin}&page=${page}&per_page=100`, {
                headers: {
                    'Authorization': `token ${token}`,
                    'Accept': 'application/vnd.github.v3+json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.items) {
                    data.items.forEach(item => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${orgLogin}</td>
                            <td>${item.repository.full_name}</td>
                            <td>${item.name}</td>
                            <td>${item.path}</td>
                            <td><a href="${item.html_url}" target="_blank">View</a></td>
                        `;
                        document.getElementById('resultsBody').appendChild(row);
                    });

                    // If there are more results, fetch the next page
                    if (data.total_count > page * 100) {
                        page++;
                        fetchCodebaseResults();
                    }
                }
            })
            .catch(error => {
                console.error('Error fetching codebase:', error);
            });
        }

        // Start fetching codebase results
        fetchCodebaseResults();
    }
</script>

</body>
</html>
