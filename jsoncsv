import http.client
import json
import csv

# Replace with your GitHub personal access token
token = 'YOUR_GITHUB_PERSONAL_ACCESS_TOKEN'

# GitHub API base URL
base_url = 'api.github.com'

# Function to make a GET request to the GitHub API
def github_api_request(endpoint):
    connection = http.client.HTTPSConnection(base_url)
    headers = {
        'Authorization': f'token {token}',
        'User-Agent': 'Python Script',
        'Accept': 'application/vnd.github.v3+json'
    }
    connection.request('GET', endpoint, headers=headers)
    response = connection.getresponse()
    data = response.read().decode('utf-8')
    connection.close()
    if response.status == 200:
        return json.loads(data)
    else:
        print(f"Failed to fetch data from {endpoint}. Status code: {response.status}")
        print(data)
        return None

# Step 1: Fetch all organizations the token has access to
organizations = github_api_request('/user/orgs')

if organizations:
    csv_data = [["Organization Name", "Team Name", "Team Member Login", "Member URL"]]

    # Step 2: Fetch all teams for each organization
    for org in organizations:
        org_login = org['login']
        teams = github_api_request(f'/orgs/{org_login}/teams')

        if teams:
            # Step 3: Fetch all members for each team
            for team in teams:
                team_name = team['name']
                members = github_api_request(f'/teams/{team["id"]}/members')

                if members:
                    for member in members:
                        csv_data.append([org_login, team_name, member['login'], member['html_url']])
                else:
                    csv_data.append([org_login, team_name, "No members found", "N/A"])

    # Step 4: Write the data to a CSV file
    with open('github_authorized_orgs_teams_members.csv', 'w', newline='') as file:
        writer = csv.writer(file)
        writer.writerows(csv_data)

    print("Teams and members saved to 'github_authorized_orgs_teams_members.csv'.")
else:
    print("No organizations found or failed to fetch organizations.")
